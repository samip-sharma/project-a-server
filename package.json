{
	"name": "project-a",
	"version": "1.0.0",
	"main": "src/index.ts",
	"type": "module",
	"scripts": {
		"dev": "concurrently npm:db:dev npm:server:dev",
		"typecheck": "tsc",
		"server:start": "node --import ./src/register-ts-node-loader.js src/index.ts",
		"server:dev": "nodemon --watch 'src/**/*' --ext ts --exec npm run server:start",
		"db:dev": "docker compose up",
		"db:console": "docker compose exec db psql -U postgres -d project_a",
		"db:migrate": "for f in $(ls migrations/*.sql | sort -V); do docker compose exec -T db psql -U postgres -d project_a < \"$f\"; done",
		"db:create": "docker compose exec -T db createdb -U postgres project_a",
		"db:drop": "docker compose exec -T db dropdb -U postgres project_a",
		"db:reset": "npm run db:wipe && npm run db:migrate",
		"db:reset:force": "npm run db:drop && npm run db:setup",
		"db:setup": "npm run db:create && npm run db:migrate",
		"db:wipe": "docker compose exec -T db psql -U postgres -d project_a -c 'DROP SCHEMA public CASCADE; CREATE SCHEMA public; GRANT ALL ON SCHEMA public TO postgres; GRANT ALL ON SCHEMA public TO public;'"
	},
	"author": "Amirata Khodaparast <amiratak88@gmail.com>",
	"license": "UNLICENSED",
	"description": "Project A Server",
	"dependencies": {
		"@hono/node-server": "^1.11.4",
		"concurrently": "^8.2.2",
		"date-fns": "^3.6.0",
		"drizzle-orm": "^0.31.2",
		"hono": "^4.4.7",
		"postgres": "^3.4.4",
		"ts-node": "^10.9.2",
		"typescript": "^5.4.5",
		"zod": "^3.23.5"
	},
	"devDependencies": {
		"@biomejs/biome": "1.8.2",
		"nodemon": "^3.1.0"
	}
}
